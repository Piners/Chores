'use strict';

// Ionic Starter App

// angular.module is a global place for creating, registering and retrieving Angular modules
// 'starter' is the name of this angular module example (also set in a <body> attribute in index.html)
// the 2nd parameter is an array of 'requires'
<<<<<<< HEAD
angular.module('chore', ['ionic']).config(function ($stateProvider) {
=======
angular.module('chore', ['ionic', 'satellizer']).config(function ($stateProvider, $authProvider) {
>>>>>>> master
  $stateProvider.state('addChild', {
    url: "/addChild",
    templateUrl: "./templates/addChild.html",
    controller: "addChildCtrl"
  }).state('editChild', {
    url: "/editChild/:id",
    templateUrl: "./templates/editChild.html",
    controller: "editChildCtrl"
  }).state('history', {
    url: "/history",
    templateUrl: "./templates/history.html",
    controller: "historyCtrl"
  }).state('home', {
    url: "/home",
    templateUrl: "./templates/home.html",
    controller: "homeCtrl"
  }).state('login', {
    url: "/login",
    templateUrl: "./templates/Login.html",
    controller: "loginCtrl"
  }).state('makeChore', {
    url: "/makeChore",
    templateUrl: "./templates/makeChore.html",
    controller: "makeChoreCtrl"
  }).state('setAwards', {
    url: "/setAwards",
    templateUrl: "./templates/setAwards.html",
    controller: "setAwardsCtrl"
  }).state('settings', {
    url: "/settings",
    templateUrl: "./templates/settings.html",
    controller: "settingsCtrl"
  }).state('tracker', {
    url: "/tracker/:id",
    templateUrl: "./templates/tracker.html",
    controller: "trackerCtrl"
  }).state('childBank', {
    url: "/child/bank",
    templateUrl: "./templates/childBank.html",
    controller: "childBankCtrl"
  }).state('childHome', {
    url: "/child/home",
    templateUrl: "./templates/childHome.html",
    controller: "childHomeCtrl"
  }).state('childLogin', {
    url: "/child/login",
    templateUrl: "./templates/childLogin.html",
    controller: "childLoginCtrl"
  }).state('childSettings', {
    url: "/child/settings",
    templateUrl: "./templates/childSettings.html",
    controller: "childSettingsCtrl"
<<<<<<< HEAD
=======
  });
  $authProvider.facebook({
    clientId: '332272057132681'
  });

  // Optional: For client-side use (Implicit Grant), set responseType to 'token' (default: 'code')
  $authProvider.facebook({
    clientId: '332272057132681',
    responseType: 'token'
  });

  $authProvider.google({
    clientId: '275352960946-5rcan3qkhlsc7m50hev5dn2e2cae9mbp.apps.googleusercontent.com',
    url: 'http://localhost:8100/#/login/'
>>>>>>> master
  });
}).run(function ($ionicPlatform) {
  $ionicPlatform.ready(function () {
    if (window.cordova && window.cordova.plugins.Keyboard) {
      // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard
      // for form inputs)
      cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);

      // Don't remove this line unless you know what you are doing. It stops the viewport
      // from snapping when text inputs are focused. Ionic handles this internally for
      // a much nicer keyboard experience.
      cordova.plugins.Keyboard.disableScroll(true);
    }
    if (window.StatusBar) {
      StatusBar.styleDefault();
    }
  });
});
"use strict";

angular.module('chore').controller("addChildCtrl", function ($scope) {
   $scope.test = "Message from add child controller";
});
"use strict";

angular.module('chore').controller("childBankCtrl", function ($scope) {
   $scope.test = "Message from bank controller";
});
"use strict";

angular.module('chore').controller("childHomeCtrl", function ($scope) {
   $scope.test = "Message from  child Home controller";
});
"use strict";

angular.module('chore').controller("childLoginCtrl", function ($scope) {
   $scope.test = "Message from child Login controller";
});
"use strict";

angular.module('chore').controller("childSettingsCtrl", function ($scope) {
   $scope.test = "Message from child settings controller";
});
"use strict";

angular.module('chore').controller("editChildCtrl", function ($scope) {
   $scope.test = "Message from edit Child controller";
});
"use strict";

angular.module('chore').controller("historyCtrl", function ($scope) {
   $scope.test = "Message from History controller";
});
"use strict";

angular.module('chore').controller("homeCtrl", function ($scope) {
   $scope.test = "Message from Home controller";
});
"use strict";

<<<<<<< HEAD
angular.module('chore').controller("loginCtrl", function ($scope) {
  // $scope.test = "Hello from login controller"
  $scope.revealer = function () {
    $scope.hide = !$scope.hide;
=======
angular.module('chore').controller("loginCtrl", function ($scope, $auth) {

  $scope.authenticate = function (provider) {
    $auth.authenticate(provider);
    // $scope.test = "Hello from login controller"
    $scope.revealer = function () {
      $scope.hide = !$scope.hide;
    };
>>>>>>> master
  };
});
"use strict";

angular.module('chore').controller("makeChoreCtrl", function ($scope) {
   $scope.test = "Message from mk chore controller";
});
"use strict";

angular.module('chore').controller("setAwardsCtrl", function ($scope) {
   $scope.test = "Message from set Award controller";
});
"use strict";

angular.module('chore').controller("settingsCtrl", function ($scope) {
   $scope.test = "Message from settings controller";
});
"use strict";

angular.module('chore').controller("trackerCtrl", function ($scope) {
   $scope.test = "Message from tracker controller";
});
<<<<<<< HEAD
//# sourceMappingURL=data:application/json;charset=utf8;base64,
=======
//# sourceMappingURL=data:application/json;charset=utf8;base64,
>>>>>>> master
